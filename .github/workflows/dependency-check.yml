name: Dependency Check

on:
  schedule:
    # 毎週月曜日の午前9時（JST）に実行
    - cron: '0 0 * * 1'
  workflow_dispatch: # 手動実行も可能

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  # 依存関係の更新チェック
  check-updates:
    name: Check for Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check outdated packages
        run: |
          echo "## 📦 Outdated Package Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check each workspace
          for workspace in api web; do
            echo "### $workspace" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            pnpm --filter $workspace outdated || true >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          done

      - name: Check for security vulnerabilities
        run: |
          echo "## 🔒 Security Audit Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          pnpm audit --audit-level=moderate || true >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  # ライセンスチェック
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install license checker
        run: pnpm add -g license-checker

      - name: Check licenses
        run: |
          echo "## 📋 License Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # List of approved licenses
          APPROVED_LICENSES="MIT;Apache-2.0;BSD-3-Clause;BSD-2-Clause;ISC;0BSD;CC0-1.0;CC-BY-3.0;CC-BY-4.0;Unlicense"
          
          echo "### Approved Licenses:" >> $GITHUB_STEP_SUMMARY
          echo "$APPROVED_LICENSES" | tr ';' '\n' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check for problematic licenses
          echo "### License Summary:" >> $GITHUB_STEP_SUMMARY
          license-checker --summary >> $GITHUB_STEP_SUMMARY || true
          
          # Check for GPL licenses
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ⚠️ Copyleft Licenses (require review):" >> $GITHUB_STEP_SUMMARY
          license-checker --onlyAllow "$APPROVED_LICENSES" --excludePrivatePackages 2>&1 | grep -E "(GPL|LGPL|AGPL)" >> $GITHUB_STEP_SUMMARY || echo "None found ✅" >> $GITHUB_STEP_SUMMARY

  # Bundle サイズチェック
  bundle-size:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and analyze
        run: |
          echo "## 📊 Bundle Size Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Build web app
          echo "### Web Application" >> $GITHUB_STEP_SUMMARY
          pnpm --filter web build || echo "Build failed" >> $GITHUB_STEP_SUMMARY
          
          # Check .next directory size if build succeeded
          if [ -d "apps/web/.next" ]; then
            echo "#### Build Output Size:" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            du -sh apps/web/.next/* | sort -hr | head -10 >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
        continue-on-error: true