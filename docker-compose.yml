version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: real-estate-dx-postgres
    environment:
      POSTGRES_DB: real_estate_dx
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - real-estate-dx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Test Database
  postgres-test:
    image: postgres:15-alpine
    container_name: real-estate-dx-postgres-test
    environment:
      POSTGRES_DB: real_estate_dx_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - real-estate-dx-network
    profiles:
      - test

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: real-estate-dx-redis
    command: redis-server --appendonly yes --requirepass ""
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - real-estate-dx-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Test
  redis-test:
    image: redis:7-alpine
    container_name: real-estate-dx-redis-test
    command: redis-server --port 6380
    ports:
      - "6380:6380"
    networks:
      - real-estate-dx-network
    profiles:
      - test

  # Elasticsearch (Optional - for advanced search)
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: real-estate-dx-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - real-estate-dx-network
    profiles:
      - search

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: real-estate-dx-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - real-estate-dx-network
    profiles:
      - monitoring

  # Grafana (Monitoring Dashboard)
  grafana:
    image: grafana/grafana:latest
    container_name: real-estate-dx-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - real-estate-dx-network
    profiles:
      - monitoring

  # Jaeger (Distributed Tracing)
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: real-estate-dx-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - real-estate-dx-network
    profiles:
      - tracing

  # MinIO (S3-compatible local storage for development)
  minio:
    image: minio/minio:latest
    container_name: real-estate-dx-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    networks:
      - real-estate-dx-network
    profiles:
      - storage

  # PgAdmin (PostgreSQL Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: real-estate-dx-pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - real-estate-dx-network
    profiles:
      - admin

  # Redis Commander (Redis Management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: real-estate-dx-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - real-estate-dx-network
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  postgres_test_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  minio_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  real-estate-dx-network:
    driver: bridge
    name: real-estate-dx-network